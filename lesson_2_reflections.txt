1. What happens when you initialize a repository? Why do you need to do it?

To make git track the history of a directory (Repository) we have to do git init in that directory.
Doing so will make a folder named .git that contains the history.
Note that there are no initail commita made yet. 
We have to make a commit manualy.

2. How is the staging area different from the working directory and the repository? What value do you think it offers?

Staging area is a place where the files to be tracked are present.
A repository or a working directory contains all the files, tracked and untracked.
It offers us flexibility to decide what files to be kept track of.

3. How can you use the staging area to make sure you have one commit per logical change?

We can put all those files that are related in one logical change in the staging area.
Then we can commit those changes and so having one commit per logical change.

4. What are some situations when branches would be helpful in keeping your history organized? How would branches help?

Branches are useful when we are trying out something that is experimental.
They also use ful when we want to extend but not sure of the result.

5. How do the diagrams help you visualize the branch structure?

Diagrams helps to see how the logs are displayed.
They also tell us about reachability.

6. What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

Merging two branches makes us to merge two lines of works.
In the diagram it is represented in that way because only then we can find the parents correctly.

7. What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?

Automatic merging is so helpfun and may file when changes are made in the same area.
Manual merging will give us the flexibility to decide on what should go into the files finally.
This also prevents fit from introducing errors that are hard to track.